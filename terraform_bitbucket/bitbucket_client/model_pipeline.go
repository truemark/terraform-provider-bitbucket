/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
	"time"
)

// Pipeline struct for Pipeline
type Pipeline struct {
	Object
	// The UUID identifying the pipeline.
	Uuid *string `json:"uuid,omitempty"`
	// The build number of the pipeline.
	BuildNumber *int32 `json:"build_number,omitempty"`
	Creator *Account `json:"creator,omitempty"`
	Repository *Repository `json:"repository,omitempty"`
	Target *PipelineTarget `json:"target,omitempty"`
	Trigger *PipelineTrigger `json:"trigger,omitempty"`
	State *PipelineState `json:"state,omitempty"`
	// The timestamp when the pipeline was created.
	CreatedOn *time.Time `json:"created_on,omitempty"`
	// The timestamp when the Pipeline was completed. This is not set if the pipeline is still in progress.
	CompletedOn *time.Time `json:"completed_on,omitempty"`
	// The number of build seconds used by this pipeline.
	BuildSecondsUsed *int32 `json:"build_seconds_used,omitempty"`
}

// NewPipeline instantiates a new Pipeline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipeline(type_ string) *Pipeline {
	this := Pipeline{}
	this.Type = type_
	return &this
}

// NewPipelineWithDefaults instantiates a new Pipeline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineWithDefaults() *Pipeline {
	this := Pipeline{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *Pipeline) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *Pipeline) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *Pipeline) SetUuid(v string) {
	o.Uuid = &v
}

// GetBuildNumber returns the BuildNumber field value if set, zero value otherwise.
func (o *Pipeline) GetBuildNumber() int32 {
	if o == nil || o.BuildNumber == nil {
		var ret int32
		return ret
	}
	return *o.BuildNumber
}

// GetBuildNumberOk returns a tuple with the BuildNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetBuildNumberOk() (*int32, bool) {
	if o == nil || o.BuildNumber == nil {
		return nil, false
	}
	return o.BuildNumber, true
}

// HasBuildNumber returns a boolean if a field has been set.
func (o *Pipeline) HasBuildNumber() bool {
	if o != nil && o.BuildNumber != nil {
		return true
	}

	return false
}

// SetBuildNumber gets a reference to the given int32 and assigns it to the BuildNumber field.
func (o *Pipeline) SetBuildNumber(v int32) {
	o.BuildNumber = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *Pipeline) GetCreator() Account {
	if o == nil || o.Creator == nil {
		var ret Account
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCreatorOk() (*Account, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *Pipeline) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given Account and assigns it to the Creator field.
func (o *Pipeline) SetCreator(v Account) {
	o.Creator = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *Pipeline) GetRepository() Repository {
	if o == nil || o.Repository == nil {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetRepositoryOk() (*Repository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *Pipeline) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *Pipeline) SetRepository(v Repository) {
	o.Repository = &v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *Pipeline) GetTarget() PipelineTarget {
	if o == nil || o.Target == nil {
		var ret PipelineTarget
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetTargetOk() (*PipelineTarget, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *Pipeline) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given PipelineTarget and assigns it to the Target field.
func (o *Pipeline) SetTarget(v PipelineTarget) {
	o.Target = &v
}

// GetTrigger returns the Trigger field value if set, zero value otherwise.
func (o *Pipeline) GetTrigger() PipelineTrigger {
	if o == nil || o.Trigger == nil {
		var ret PipelineTrigger
		return ret
	}
	return *o.Trigger
}

// GetTriggerOk returns a tuple with the Trigger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetTriggerOk() (*PipelineTrigger, bool) {
	if o == nil || o.Trigger == nil {
		return nil, false
	}
	return o.Trigger, true
}

// HasTrigger returns a boolean if a field has been set.
func (o *Pipeline) HasTrigger() bool {
	if o != nil && o.Trigger != nil {
		return true
	}

	return false
}

// SetTrigger gets a reference to the given PipelineTrigger and assigns it to the Trigger field.
func (o *Pipeline) SetTrigger(v PipelineTrigger) {
	o.Trigger = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Pipeline) GetState() PipelineState {
	if o == nil || o.State == nil {
		var ret PipelineState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetStateOk() (*PipelineState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Pipeline) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given PipelineState and assigns it to the State field.
func (o *Pipeline) SetState(v PipelineState) {
	o.State = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *Pipeline) GetCreatedOn() time.Time {
	if o == nil || o.CreatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *Pipeline) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *Pipeline) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetCompletedOn returns the CompletedOn field value if set, zero value otherwise.
func (o *Pipeline) GetCompletedOn() time.Time {
	if o == nil || o.CompletedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletedOn
}

// GetCompletedOnOk returns a tuple with the CompletedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetCompletedOnOk() (*time.Time, bool) {
	if o == nil || o.CompletedOn == nil {
		return nil, false
	}
	return o.CompletedOn, true
}

// HasCompletedOn returns a boolean if a field has been set.
func (o *Pipeline) HasCompletedOn() bool {
	if o != nil && o.CompletedOn != nil {
		return true
	}

	return false
}

// SetCompletedOn gets a reference to the given time.Time and assigns it to the CompletedOn field.
func (o *Pipeline) SetCompletedOn(v time.Time) {
	o.CompletedOn = &v
}

// GetBuildSecondsUsed returns the BuildSecondsUsed field value if set, zero value otherwise.
func (o *Pipeline) GetBuildSecondsUsed() int32 {
	if o == nil || o.BuildSecondsUsed == nil {
		var ret int32
		return ret
	}
	return *o.BuildSecondsUsed
}

// GetBuildSecondsUsedOk returns a tuple with the BuildSecondsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pipeline) GetBuildSecondsUsedOk() (*int32, bool) {
	if o == nil || o.BuildSecondsUsed == nil {
		return nil, false
	}
	return o.BuildSecondsUsed, true
}

// HasBuildSecondsUsed returns a boolean if a field has been set.
func (o *Pipeline) HasBuildSecondsUsed() bool {
	if o != nil && o.BuildSecondsUsed != nil {
		return true
	}

	return false
}

// SetBuildSecondsUsed gets a reference to the given int32 and assigns it to the BuildSecondsUsed field.
func (o *Pipeline) SetBuildSecondsUsed(v int32) {
	o.BuildSecondsUsed = &v
}

func (o Pipeline) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedObject, errObject := json.Marshal(o.Object)
	if errObject != nil {
		return []byte{}, errObject
	}
	errObject = json.Unmarshal([]byte(serializedObject), &toSerialize)
	if errObject != nil {
		return []byte{}, errObject
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.BuildNumber != nil {
		toSerialize["build_number"] = o.BuildNumber
	}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.Trigger != nil {
		toSerialize["trigger"] = o.Trigger
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.CreatedOn != nil {
		toSerialize["created_on"] = o.CreatedOn
	}
	if o.CompletedOn != nil {
		toSerialize["completed_on"] = o.CompletedOn
	}
	if o.BuildSecondsUsed != nil {
		toSerialize["build_seconds_used"] = o.BuildSecondsUsed
	}
	return json.Marshal(toSerialize)
}

type NullablePipeline struct {
	value *Pipeline
	isSet bool
}

func (v NullablePipeline) Get() *Pipeline {
	return v.value
}

func (v *NullablePipeline) Set(val *Pipeline) {
	v.value = val
	v.isSet = true
}

func (v NullablePipeline) IsSet() bool {
	return v.isSet
}

func (v *NullablePipeline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipeline(val *Pipeline) *NullablePipeline {
	return &NullablePipeline{value: val, isSet: true}
}

func (v NullablePipeline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipeline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


