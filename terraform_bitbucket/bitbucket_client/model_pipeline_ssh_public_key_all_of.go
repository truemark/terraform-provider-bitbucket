/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PipelineSshPublicKeyAllOf A Pipelines known host public key.
type PipelineSshPublicKeyAllOf struct {
	// The type of the public key.
	KeyType *string `json:"key_type,omitempty"`
	// The base64 encoded public key.
	Key *string `json:"key,omitempty"`
	// The MD5 fingerprint of the public key.
	Md5Fingerprint *string `json:"md5_fingerprint,omitempty"`
	// The SHA-256 fingerprint of the public key.
	Sha256Fingerprint *string `json:"sha256_fingerprint,omitempty"`
}

// NewPipelineSshPublicKeyAllOf instantiates a new PipelineSshPublicKeyAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineSshPublicKeyAllOf() *PipelineSshPublicKeyAllOf {
	this := PipelineSshPublicKeyAllOf{}
	return &this
}

// NewPipelineSshPublicKeyAllOfWithDefaults instantiates a new PipelineSshPublicKeyAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineSshPublicKeyAllOfWithDefaults() *PipelineSshPublicKeyAllOf {
	this := PipelineSshPublicKeyAllOf{}
	return &this
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *PipelineSshPublicKeyAllOf) GetKeyType() string {
	if o == nil || o.KeyType == nil {
		var ret string
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshPublicKeyAllOf) GetKeyTypeOk() (*string, bool) {
	if o == nil || o.KeyType == nil {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *PipelineSshPublicKeyAllOf) HasKeyType() bool {
	if o != nil && o.KeyType != nil {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given string and assigns it to the KeyType field.
func (o *PipelineSshPublicKeyAllOf) SetKeyType(v string) {
	o.KeyType = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *PipelineSshPublicKeyAllOf) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshPublicKeyAllOf) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *PipelineSshPublicKeyAllOf) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *PipelineSshPublicKeyAllOf) SetKey(v string) {
	o.Key = &v
}

// GetMd5Fingerprint returns the Md5Fingerprint field value if set, zero value otherwise.
func (o *PipelineSshPublicKeyAllOf) GetMd5Fingerprint() string {
	if o == nil || o.Md5Fingerprint == nil {
		var ret string
		return ret
	}
	return *o.Md5Fingerprint
}

// GetMd5FingerprintOk returns a tuple with the Md5Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshPublicKeyAllOf) GetMd5FingerprintOk() (*string, bool) {
	if o == nil || o.Md5Fingerprint == nil {
		return nil, false
	}
	return o.Md5Fingerprint, true
}

// HasMd5Fingerprint returns a boolean if a field has been set.
func (o *PipelineSshPublicKeyAllOf) HasMd5Fingerprint() bool {
	if o != nil && o.Md5Fingerprint != nil {
		return true
	}

	return false
}

// SetMd5Fingerprint gets a reference to the given string and assigns it to the Md5Fingerprint field.
func (o *PipelineSshPublicKeyAllOf) SetMd5Fingerprint(v string) {
	o.Md5Fingerprint = &v
}

// GetSha256Fingerprint returns the Sha256Fingerprint field value if set, zero value otherwise.
func (o *PipelineSshPublicKeyAllOf) GetSha256Fingerprint() string {
	if o == nil || o.Sha256Fingerprint == nil {
		var ret string
		return ret
	}
	return *o.Sha256Fingerprint
}

// GetSha256FingerprintOk returns a tuple with the Sha256Fingerprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshPublicKeyAllOf) GetSha256FingerprintOk() (*string, bool) {
	if o == nil || o.Sha256Fingerprint == nil {
		return nil, false
	}
	return o.Sha256Fingerprint, true
}

// HasSha256Fingerprint returns a boolean if a field has been set.
func (o *PipelineSshPublicKeyAllOf) HasSha256Fingerprint() bool {
	if o != nil && o.Sha256Fingerprint != nil {
		return true
	}

	return false
}

// SetSha256Fingerprint gets a reference to the given string and assigns it to the Sha256Fingerprint field.
func (o *PipelineSshPublicKeyAllOf) SetSha256Fingerprint(v string) {
	o.Sha256Fingerprint = &v
}

func (o PipelineSshPublicKeyAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeyType != nil {
		toSerialize["key_type"] = o.KeyType
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Md5Fingerprint != nil {
		toSerialize["md5_fingerprint"] = o.Md5Fingerprint
	}
	if o.Sha256Fingerprint != nil {
		toSerialize["sha256_fingerprint"] = o.Sha256Fingerprint
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineSshPublicKeyAllOf struct {
	value *PipelineSshPublicKeyAllOf
	isSet bool
}

func (v NullablePipelineSshPublicKeyAllOf) Get() *PipelineSshPublicKeyAllOf {
	return v.value
}

func (v *NullablePipelineSshPublicKeyAllOf) Set(val *PipelineSshPublicKeyAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineSshPublicKeyAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineSshPublicKeyAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineSshPublicKeyAllOf(val *PipelineSshPublicKeyAllOf) *NullablePipelineSshPublicKeyAllOf {
	return &NullablePipelineSshPublicKeyAllOf{value: val, isSet: true}
}

func (v NullablePipelineSshPublicKeyAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineSshPublicKeyAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


