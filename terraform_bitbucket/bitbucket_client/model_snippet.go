/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
	"time"
)

// Snippet A snippet object.
type Snippet struct {
	Id *int32 `json:"id,omitempty"`
	Title *string `json:"title,omitempty"`
	// The DVCS used to store the snippet.
	Scm *string `json:"scm,omitempty"`
	CreatedOn *time.Time `json:"created_on,omitempty"`
	UpdatedOn *time.Time `json:"updated_on,omitempty"`
	Owner *Account `json:"owner,omitempty"`
	Creator *Account `json:"creator,omitempty"`
	IsPrivate *bool `json:"is_private,omitempty"`
}

// NewSnippet instantiates a new Snippet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnippet() *Snippet {
	this := Snippet{}
	return &this
}

// NewSnippetWithDefaults instantiates a new Snippet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnippetWithDefaults() *Snippet {
	this := Snippet{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Snippet) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Snippet) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Snippet) SetId(v int32) {
	o.Id = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Snippet) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Snippet) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Snippet) SetTitle(v string) {
	o.Title = &v
}

// GetScm returns the Scm field value if set, zero value otherwise.
func (o *Snippet) GetScm() string {
	if o == nil || o.Scm == nil {
		var ret string
		return ret
	}
	return *o.Scm
}

// GetScmOk returns a tuple with the Scm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetScmOk() (*string, bool) {
	if o == nil || o.Scm == nil {
		return nil, false
	}
	return o.Scm, true
}

// HasScm returns a boolean if a field has been set.
func (o *Snippet) HasScm() bool {
	if o != nil && o.Scm != nil {
		return true
	}

	return false
}

// SetScm gets a reference to the given string and assigns it to the Scm field.
func (o *Snippet) SetScm(v string) {
	o.Scm = &v
}

// GetCreatedOn returns the CreatedOn field value if set, zero value otherwise.
func (o *Snippet) GetCreatedOn() time.Time {
	if o == nil || o.CreatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedOn
}

// GetCreatedOnOk returns a tuple with the CreatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetCreatedOnOk() (*time.Time, bool) {
	if o == nil || o.CreatedOn == nil {
		return nil, false
	}
	return o.CreatedOn, true
}

// HasCreatedOn returns a boolean if a field has been set.
func (o *Snippet) HasCreatedOn() bool {
	if o != nil && o.CreatedOn != nil {
		return true
	}

	return false
}

// SetCreatedOn gets a reference to the given time.Time and assigns it to the CreatedOn field.
func (o *Snippet) SetCreatedOn(v time.Time) {
	o.CreatedOn = &v
}

// GetUpdatedOn returns the UpdatedOn field value if set, zero value otherwise.
func (o *Snippet) GetUpdatedOn() time.Time {
	if o == nil || o.UpdatedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedOn
}

// GetUpdatedOnOk returns a tuple with the UpdatedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetUpdatedOnOk() (*time.Time, bool) {
	if o == nil || o.UpdatedOn == nil {
		return nil, false
	}
	return o.UpdatedOn, true
}

// HasUpdatedOn returns a boolean if a field has been set.
func (o *Snippet) HasUpdatedOn() bool {
	if o != nil && o.UpdatedOn != nil {
		return true
	}

	return false
}

// SetUpdatedOn gets a reference to the given time.Time and assigns it to the UpdatedOn field.
func (o *Snippet) SetUpdatedOn(v time.Time) {
	o.UpdatedOn = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *Snippet) GetOwner() Account {
	if o == nil || o.Owner == nil {
		var ret Account
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetOwnerOk() (*Account, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *Snippet) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given Account and assigns it to the Owner field.
func (o *Snippet) SetOwner(v Account) {
	o.Owner = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *Snippet) GetCreator() Account {
	if o == nil || o.Creator == nil {
		var ret Account
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetCreatorOk() (*Account, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *Snippet) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given Account and assigns it to the Creator field.
func (o *Snippet) SetCreator(v Account) {
	o.Creator = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *Snippet) GetIsPrivate() bool {
	if o == nil || o.IsPrivate == nil {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Snippet) GetIsPrivateOk() (*bool, bool) {
	if o == nil || o.IsPrivate == nil {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *Snippet) HasIsPrivate() bool {
	if o != nil && o.IsPrivate != nil {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *Snippet) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

func (o Snippet) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.Scm != nil {
		toSerialize["scm"] = o.Scm
	}
	if o.CreatedOn != nil {
		toSerialize["created_on"] = o.CreatedOn
	}
	if o.UpdatedOn != nil {
		toSerialize["updated_on"] = o.UpdatedOn
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.IsPrivate != nil {
		toSerialize["is_private"] = o.IsPrivate
	}
	return json.Marshal(toSerialize)
}

type NullableSnippet struct {
	value *Snippet
	isSet bool
}

func (v NullableSnippet) Get() *Snippet {
	return v.value
}

func (v *NullableSnippet) Set(val *Snippet) {
	v.value = val
	v.isSet = true
}

func (v NullableSnippet) IsSet() bool {
	return v.isSet
}

func (v *NullableSnippet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnippet(val *Snippet) *NullableSnippet {
	return &NullableSnippet{value: val, isSet: true}
}

func (v NullableSnippet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnippet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


