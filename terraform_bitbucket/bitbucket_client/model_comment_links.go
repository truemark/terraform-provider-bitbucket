/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// CommentLinks struct for CommentLinks
type CommentLinks struct {
	Self *Link `json:"self,omitempty"`
	Html *Link `json:"html,omitempty"`
	Code *Link `json:"code,omitempty"`
}

// NewCommentLinks instantiates a new CommentLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentLinks() *CommentLinks {
	this := CommentLinks{}
	return &this
}

// NewCommentLinksWithDefaults instantiates a new CommentLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentLinksWithDefaults() *CommentLinks {
	this := CommentLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CommentLinks) GetSelf() Link {
	if o == nil || o.Self == nil {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentLinks) GetSelfOk() (*Link, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CommentLinks) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *CommentLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *CommentLinks) GetHtml() Link {
	if o == nil || o.Html == nil {
		var ret Link
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentLinks) GetHtmlOk() (*Link, bool) {
	if o == nil || o.Html == nil {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *CommentLinks) HasHtml() bool {
	if o != nil && o.Html != nil {
		return true
	}

	return false
}

// SetHtml gets a reference to the given Link and assigns it to the Html field.
func (o *CommentLinks) SetHtml(v Link) {
	o.Html = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *CommentLinks) GetCode() Link {
	if o == nil || o.Code == nil {
		var ret Link
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentLinks) GetCodeOk() (*Link, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *CommentLinks) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given Link and assigns it to the Code field.
func (o *CommentLinks) SetCode(v Link) {
	o.Code = &v
}

func (o CommentLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if o.Html != nil {
		toSerialize["html"] = o.Html
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableCommentLinks struct {
	value *CommentLinks
	isSet bool
}

func (v NullableCommentLinks) Get() *CommentLinks {
	return v.value
}

func (v *NullableCommentLinks) Set(val *CommentLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentLinks(val *CommentLinks) *NullableCommentLinks {
	return &NullableCommentLinks{value: val, isSet: true}
}

func (v NullableCommentLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


