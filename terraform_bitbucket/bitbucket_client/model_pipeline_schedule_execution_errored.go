/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PipelineScheduleExecutionErrored struct for PipelineScheduleExecutionErrored
type PipelineScheduleExecutionErrored struct {
	PipelineScheduleExecution
	Error *PipelineError `json:"error,omitempty"`
}

// NewPipelineScheduleExecutionErrored instantiates a new PipelineScheduleExecutionErrored object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineScheduleExecutionErrored(type_ string) *PipelineScheduleExecutionErrored {
	this := PipelineScheduleExecutionErrored{}
	this.Type = type_
	return &this
}

// NewPipelineScheduleExecutionErroredWithDefaults instantiates a new PipelineScheduleExecutionErrored object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineScheduleExecutionErroredWithDefaults() *PipelineScheduleExecutionErrored {
	this := PipelineScheduleExecutionErrored{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *PipelineScheduleExecutionErrored) GetError() PipelineError {
	if o == nil || o.Error == nil {
		var ret PipelineError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineScheduleExecutionErrored) GetErrorOk() (*PipelineError, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *PipelineScheduleExecutionErrored) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given PipelineError and assigns it to the Error field.
func (o *PipelineScheduleExecutionErrored) SetError(v PipelineError) {
	o.Error = &v
}

func (o PipelineScheduleExecutionErrored) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedPipelineScheduleExecution, errPipelineScheduleExecution := json.Marshal(o.PipelineScheduleExecution)
	if errPipelineScheduleExecution != nil {
		return []byte{}, errPipelineScheduleExecution
	}
	errPipelineScheduleExecution = json.Unmarshal([]byte(serializedPipelineScheduleExecution), &toSerialize)
	if errPipelineScheduleExecution != nil {
		return []byte{}, errPipelineScheduleExecution
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineScheduleExecutionErrored struct {
	value *PipelineScheduleExecutionErrored
	isSet bool
}

func (v NullablePipelineScheduleExecutionErrored) Get() *PipelineScheduleExecutionErrored {
	return v.value
}

func (v *NullablePipelineScheduleExecutionErrored) Set(val *PipelineScheduleExecutionErrored) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineScheduleExecutionErrored) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineScheduleExecutionErrored) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineScheduleExecutionErrored(val *PipelineScheduleExecutionErrored) *NullablePipelineScheduleExecutionErrored {
	return &NullablePipelineScheduleExecutionErrored{value: val, isSet: true}
}

func (v NullablePipelineScheduleExecutionErrored) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineScheduleExecutionErrored) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


