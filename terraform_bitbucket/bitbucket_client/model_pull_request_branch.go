/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PullRequestBranch struct for PullRequestBranch
type PullRequestBranch struct {
	Name *string `json:"name,omitempty"`
	// Available merge strategies, when this endpoint is the destination of the pull request.
	MergeStrategies *[]string `json:"merge_strategies,omitempty"`
	// The default merge strategy, when this endpoint is the destination of the pull request.
	DefaultMergeStrategy *string `json:"default_merge_strategy,omitempty"`
}

// NewPullRequestBranch instantiates a new PullRequestBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestBranch() *PullRequestBranch {
	this := PullRequestBranch{}
	return &this
}

// NewPullRequestBranchWithDefaults instantiates a new PullRequestBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestBranchWithDefaults() *PullRequestBranch {
	this := PullRequestBranch{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PullRequestBranch) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBranch) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PullRequestBranch) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PullRequestBranch) SetName(v string) {
	o.Name = &v
}

// GetMergeStrategies returns the MergeStrategies field value if set, zero value otherwise.
func (o *PullRequestBranch) GetMergeStrategies() []string {
	if o == nil || o.MergeStrategies == nil {
		var ret []string
		return ret
	}
	return *o.MergeStrategies
}

// GetMergeStrategiesOk returns a tuple with the MergeStrategies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBranch) GetMergeStrategiesOk() (*[]string, bool) {
	if o == nil || o.MergeStrategies == nil {
		return nil, false
	}
	return o.MergeStrategies, true
}

// HasMergeStrategies returns a boolean if a field has been set.
func (o *PullRequestBranch) HasMergeStrategies() bool {
	if o != nil && o.MergeStrategies != nil {
		return true
	}

	return false
}

// SetMergeStrategies gets a reference to the given []string and assigns it to the MergeStrategies field.
func (o *PullRequestBranch) SetMergeStrategies(v []string) {
	o.MergeStrategies = &v
}

// GetDefaultMergeStrategy returns the DefaultMergeStrategy field value if set, zero value otherwise.
func (o *PullRequestBranch) GetDefaultMergeStrategy() string {
	if o == nil || o.DefaultMergeStrategy == nil {
		var ret string
		return ret
	}
	return *o.DefaultMergeStrategy
}

// GetDefaultMergeStrategyOk returns a tuple with the DefaultMergeStrategy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBranch) GetDefaultMergeStrategyOk() (*string, bool) {
	if o == nil || o.DefaultMergeStrategy == nil {
		return nil, false
	}
	return o.DefaultMergeStrategy, true
}

// HasDefaultMergeStrategy returns a boolean if a field has been set.
func (o *PullRequestBranch) HasDefaultMergeStrategy() bool {
	if o != nil && o.DefaultMergeStrategy != nil {
		return true
	}

	return false
}

// SetDefaultMergeStrategy gets a reference to the given string and assigns it to the DefaultMergeStrategy field.
func (o *PullRequestBranch) SetDefaultMergeStrategy(v string) {
	o.DefaultMergeStrategy = &v
}

func (o PullRequestBranch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.MergeStrategies != nil {
		toSerialize["merge_strategies"] = o.MergeStrategies
	}
	if o.DefaultMergeStrategy != nil {
		toSerialize["default_merge_strategy"] = o.DefaultMergeStrategy
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestBranch struct {
	value *PullRequestBranch
	isSet bool
}

func (v NullablePullRequestBranch) Get() *PullRequestBranch {
	return v.value
}

func (v *NullablePullRequestBranch) Set(val *PullRequestBranch) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestBranch) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestBranch(val *PullRequestBranch) *NullablePullRequestBranch {
	return &NullablePullRequestBranch{value: val, isSet: true}
}

func (v NullablePullRequestBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


