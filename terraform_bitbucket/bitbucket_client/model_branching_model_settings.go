/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// BranchingModelSettings A repository's branching model settings
type BranchingModelSettings struct {
	Links *BranchingModelSettingsLinks `json:"links,omitempty"`
	BranchTypes *[]BranchingModelSettingsBranchTypes `json:"branch_types,omitempty"`
	Development *BranchingModelSettingsDevelopment `json:"development,omitempty"`
	Production *BranchingModelSettingsProduction `json:"production,omitempty"`
}

// NewBranchingModelSettings instantiates a new BranchingModelSettings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBranchingModelSettings() *BranchingModelSettings {
	this := BranchingModelSettings{}
	return &this
}

// NewBranchingModelSettingsWithDefaults instantiates a new BranchingModelSettings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBranchingModelSettingsWithDefaults() *BranchingModelSettings {
	this := BranchingModelSettings{}
	return &this
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *BranchingModelSettings) GetLinks() BranchingModelSettingsLinks {
	if o == nil || o.Links == nil {
		var ret BranchingModelSettingsLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchingModelSettings) GetLinksOk() (*BranchingModelSettingsLinks, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *BranchingModelSettings) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given BranchingModelSettingsLinks and assigns it to the Links field.
func (o *BranchingModelSettings) SetLinks(v BranchingModelSettingsLinks) {
	o.Links = &v
}

// GetBranchTypes returns the BranchTypes field value if set, zero value otherwise.
func (o *BranchingModelSettings) GetBranchTypes() []BranchingModelSettingsBranchTypes {
	if o == nil || o.BranchTypes == nil {
		var ret []BranchingModelSettingsBranchTypes
		return ret
	}
	return *o.BranchTypes
}

// GetBranchTypesOk returns a tuple with the BranchTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchingModelSettings) GetBranchTypesOk() (*[]BranchingModelSettingsBranchTypes, bool) {
	if o == nil || o.BranchTypes == nil {
		return nil, false
	}
	return o.BranchTypes, true
}

// HasBranchTypes returns a boolean if a field has been set.
func (o *BranchingModelSettings) HasBranchTypes() bool {
	if o != nil && o.BranchTypes != nil {
		return true
	}

	return false
}

// SetBranchTypes gets a reference to the given []BranchingModelSettingsBranchTypes and assigns it to the BranchTypes field.
func (o *BranchingModelSettings) SetBranchTypes(v []BranchingModelSettingsBranchTypes) {
	o.BranchTypes = &v
}

// GetDevelopment returns the Development field value if set, zero value otherwise.
func (o *BranchingModelSettings) GetDevelopment() BranchingModelSettingsDevelopment {
	if o == nil || o.Development == nil {
		var ret BranchingModelSettingsDevelopment
		return ret
	}
	return *o.Development
}

// GetDevelopmentOk returns a tuple with the Development field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchingModelSettings) GetDevelopmentOk() (*BranchingModelSettingsDevelopment, bool) {
	if o == nil || o.Development == nil {
		return nil, false
	}
	return o.Development, true
}

// HasDevelopment returns a boolean if a field has been set.
func (o *BranchingModelSettings) HasDevelopment() bool {
	if o != nil && o.Development != nil {
		return true
	}

	return false
}

// SetDevelopment gets a reference to the given BranchingModelSettingsDevelopment and assigns it to the Development field.
func (o *BranchingModelSettings) SetDevelopment(v BranchingModelSettingsDevelopment) {
	o.Development = &v
}

// GetProduction returns the Production field value if set, zero value otherwise.
func (o *BranchingModelSettings) GetProduction() BranchingModelSettingsProduction {
	if o == nil || o.Production == nil {
		var ret BranchingModelSettingsProduction
		return ret
	}
	return *o.Production
}

// GetProductionOk returns a tuple with the Production field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BranchingModelSettings) GetProductionOk() (*BranchingModelSettingsProduction, bool) {
	if o == nil || o.Production == nil {
		return nil, false
	}
	return o.Production, true
}

// HasProduction returns a boolean if a field has been set.
func (o *BranchingModelSettings) HasProduction() bool {
	if o != nil && o.Production != nil {
		return true
	}

	return false
}

// SetProduction gets a reference to the given BranchingModelSettingsProduction and assigns it to the Production field.
func (o *BranchingModelSettings) SetProduction(v BranchingModelSettingsProduction) {
	o.Production = &v
}

func (o BranchingModelSettings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.BranchTypes != nil {
		toSerialize["branch_types"] = o.BranchTypes
	}
	if o.Development != nil {
		toSerialize["development"] = o.Development
	}
	if o.Production != nil {
		toSerialize["production"] = o.Production
	}
	return json.Marshal(toSerialize)
}

type NullableBranchingModelSettings struct {
	value *BranchingModelSettings
	isSet bool
}

func (v NullableBranchingModelSettings) Get() *BranchingModelSettings {
	return v.value
}

func (v *NullableBranchingModelSettings) Set(val *BranchingModelSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableBranchingModelSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableBranchingModelSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBranchingModelSettings(val *BranchingModelSettings) *NullableBranchingModelSettings {
	return &NullableBranchingModelSettings{value: val, isSet: true}
}

func (v NullableBranchingModelSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBranchingModelSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


