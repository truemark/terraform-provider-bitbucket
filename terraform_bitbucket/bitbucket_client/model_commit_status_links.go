/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// CommitStatusLinks struct for CommitStatusLinks
type CommitStatusLinks struct {
	Self *Link `json:"self,omitempty"`
	Commit *Link `json:"commit,omitempty"`
}

// NewCommitStatusLinks instantiates a new CommitStatusLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommitStatusLinks() *CommitStatusLinks {
	this := CommitStatusLinks{}
	return &this
}

// NewCommitStatusLinksWithDefaults instantiates a new CommitStatusLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommitStatusLinksWithDefaults() *CommitStatusLinks {
	this := CommitStatusLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *CommitStatusLinks) GetSelf() Link {
	if o == nil || o.Self == nil {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommitStatusLinks) GetSelfOk() (*Link, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *CommitStatusLinks) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *CommitStatusLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *CommitStatusLinks) GetCommit() Link {
	if o == nil || o.Commit == nil {
		var ret Link
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommitStatusLinks) GetCommitOk() (*Link, bool) {
	if o == nil || o.Commit == nil {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *CommitStatusLinks) HasCommit() bool {
	if o != nil && o.Commit != nil {
		return true
	}

	return false
}

// SetCommit gets a reference to the given Link and assigns it to the Commit field.
func (o *CommitStatusLinks) SetCommit(v Link) {
	o.Commit = &v
}

func (o CommitStatusLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if o.Commit != nil {
		toSerialize["commit"] = o.Commit
	}
	return json.Marshal(toSerialize)
}

type NullableCommitStatusLinks struct {
	value *CommitStatusLinks
	isSet bool
}

func (v NullableCommitStatusLinks) Get() *CommitStatusLinks {
	return v.value
}

func (v *NullableCommitStatusLinks) Set(val *CommitStatusLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableCommitStatusLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableCommitStatusLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommitStatusLinks(val *CommitStatusLinks) *NullableCommitStatusLinks {
	return &NullableCommitStatusLinks{value: val, isSet: true}
}

func (v NullableCommitStatusLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommitStatusLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


