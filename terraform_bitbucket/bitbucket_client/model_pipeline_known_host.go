/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PipelineKnownHost struct for PipelineKnownHost
type PipelineKnownHost struct {
	Object
	// The UUID identifying the known host.
	Uuid *string `json:"uuid,omitempty"`
	// The hostname of the known host.
	Hostname *string `json:"hostname,omitempty"`
	PublicKey *PipelineSshPublicKey `json:"public_key,omitempty"`
}

// NewPipelineKnownHost instantiates a new PipelineKnownHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineKnownHost(type_ string) *PipelineKnownHost {
	this := PipelineKnownHost{}
	this.Type = type_
	return &this
}

// NewPipelineKnownHostWithDefaults instantiates a new PipelineKnownHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineKnownHostWithDefaults() *PipelineKnownHost {
	this := PipelineKnownHost{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PipelineKnownHost) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineKnownHost) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PipelineKnownHost) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PipelineKnownHost) SetUuid(v string) {
	o.Uuid = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *PipelineKnownHost) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineKnownHost) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *PipelineKnownHost) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *PipelineKnownHost) SetHostname(v string) {
	o.Hostname = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *PipelineKnownHost) GetPublicKey() PipelineSshPublicKey {
	if o == nil || o.PublicKey == nil {
		var ret PipelineSshPublicKey
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineKnownHost) GetPublicKeyOk() (*PipelineSshPublicKey, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *PipelineKnownHost) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given PipelineSshPublicKey and assigns it to the PublicKey field.
func (o *PipelineKnownHost) SetPublicKey(v PipelineSshPublicKey) {
	o.PublicKey = &v
}

func (o PipelineKnownHost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	serializedObject, errObject := json.Marshal(o.Object)
	if errObject != nil {
		return []byte{}, errObject
	}
	errObject = json.Unmarshal([]byte(serializedObject), &toSerialize)
	if errObject != nil {
		return []byte{}, errObject
	}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineKnownHost struct {
	value *PipelineKnownHost
	isSet bool
}

func (v NullablePipelineKnownHost) Get() *PipelineKnownHost {
	return v.value
}

func (v *NullablePipelineKnownHost) Set(val *PipelineKnownHost) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineKnownHost) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineKnownHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineKnownHost(val *PipelineKnownHost) *NullablePipelineKnownHost {
	return &NullablePipelineKnownHost{value: val, isSet: true}
}

func (v NullablePipelineKnownHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineKnownHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


