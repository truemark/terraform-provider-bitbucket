/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PullRequestComment A pullrequest comment.
type PullRequestComment struct {
	Pullrequest *Pullrequest `json:"pullrequest,omitempty"`
}

// NewPullRequestComment instantiates a new PullRequestComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestComment() *PullRequestComment {
	this := PullRequestComment{}
	return &this
}

// NewPullRequestCommentWithDefaults instantiates a new PullRequestComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestCommentWithDefaults() *PullRequestComment {
	this := PullRequestComment{}
	return &this
}

// GetPullrequest returns the Pullrequest field value if set, zero value otherwise.
func (o *PullRequestComment) GetPullrequest() Pullrequest {
	if o == nil || o.Pullrequest == nil {
		var ret Pullrequest
		return ret
	}
	return *o.Pullrequest
}

// GetPullrequestOk returns a tuple with the Pullrequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestComment) GetPullrequestOk() (*Pullrequest, bool) {
	if o == nil || o.Pullrequest == nil {
		return nil, false
	}
	return o.Pullrequest, true
}

// HasPullrequest returns a boolean if a field has been set.
func (o *PullRequestComment) HasPullrequest() bool {
	if o != nil && o.Pullrequest != nil {
		return true
	}

	return false
}

// SetPullrequest gets a reference to the given Pullrequest and assigns it to the Pullrequest field.
func (o *PullRequestComment) SetPullrequest(v Pullrequest) {
	o.Pullrequest = &v
}

func (o PullRequestComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Pullrequest != nil {
		toSerialize["pullrequest"] = o.Pullrequest
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestComment struct {
	value *PullRequestComment
	isSet bool
}

func (v NullablePullRequestComment) Get() *PullRequestComment {
	return v.value
}

func (v *NullablePullRequestComment) Set(val *PullRequestComment) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestComment) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestComment(val *PullRequestComment) *NullablePullRequestComment {
	return &NullablePullRequestComment{value: val, isSet: true}
}

func (v NullablePullRequestComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


