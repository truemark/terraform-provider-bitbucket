/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PullRequestLinks struct for PullRequestLinks
type PullRequestLinks struct {
	Self *Link `json:"self,omitempty"`
	Html *Link `json:"html,omitempty"`
	Commits *Link `json:"commits,omitempty"`
	Approve *Link `json:"approve,omitempty"`
	Diff *Link `json:"diff,omitempty"`
	Diffstat *Link `json:"diffstat,omitempty"`
	Comments *Link `json:"comments,omitempty"`
	Activity *Link `json:"activity,omitempty"`
	Merge *Link `json:"merge,omitempty"`
	Decline *Link `json:"decline,omitempty"`
}

// NewPullRequestLinks instantiates a new PullRequestLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestLinks() *PullRequestLinks {
	this := PullRequestLinks{}
	return &this
}

// NewPullRequestLinksWithDefaults instantiates a new PullRequestLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestLinksWithDefaults() *PullRequestLinks {
	this := PullRequestLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *PullRequestLinks) GetSelf() Link {
	if o == nil || o.Self == nil {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetSelfOk() (*Link, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *PullRequestLinks) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *PullRequestLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *PullRequestLinks) GetHtml() Link {
	if o == nil || o.Html == nil {
		var ret Link
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetHtmlOk() (*Link, bool) {
	if o == nil || o.Html == nil {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *PullRequestLinks) HasHtml() bool {
	if o != nil && o.Html != nil {
		return true
	}

	return false
}

// SetHtml gets a reference to the given Link and assigns it to the Html field.
func (o *PullRequestLinks) SetHtml(v Link) {
	o.Html = &v
}

// GetCommits returns the Commits field value if set, zero value otherwise.
func (o *PullRequestLinks) GetCommits() Link {
	if o == nil || o.Commits == nil {
		var ret Link
		return ret
	}
	return *o.Commits
}

// GetCommitsOk returns a tuple with the Commits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetCommitsOk() (*Link, bool) {
	if o == nil || o.Commits == nil {
		return nil, false
	}
	return o.Commits, true
}

// HasCommits returns a boolean if a field has been set.
func (o *PullRequestLinks) HasCommits() bool {
	if o != nil && o.Commits != nil {
		return true
	}

	return false
}

// SetCommits gets a reference to the given Link and assigns it to the Commits field.
func (o *PullRequestLinks) SetCommits(v Link) {
	o.Commits = &v
}

// GetApprove returns the Approve field value if set, zero value otherwise.
func (o *PullRequestLinks) GetApprove() Link {
	if o == nil || o.Approve == nil {
		var ret Link
		return ret
	}
	return *o.Approve
}

// GetApproveOk returns a tuple with the Approve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetApproveOk() (*Link, bool) {
	if o == nil || o.Approve == nil {
		return nil, false
	}
	return o.Approve, true
}

// HasApprove returns a boolean if a field has been set.
func (o *PullRequestLinks) HasApprove() bool {
	if o != nil && o.Approve != nil {
		return true
	}

	return false
}

// SetApprove gets a reference to the given Link and assigns it to the Approve field.
func (o *PullRequestLinks) SetApprove(v Link) {
	o.Approve = &v
}

// GetDiff returns the Diff field value if set, zero value otherwise.
func (o *PullRequestLinks) GetDiff() Link {
	if o == nil || o.Diff == nil {
		var ret Link
		return ret
	}
	return *o.Diff
}

// GetDiffOk returns a tuple with the Diff field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetDiffOk() (*Link, bool) {
	if o == nil || o.Diff == nil {
		return nil, false
	}
	return o.Diff, true
}

// HasDiff returns a boolean if a field has been set.
func (o *PullRequestLinks) HasDiff() bool {
	if o != nil && o.Diff != nil {
		return true
	}

	return false
}

// SetDiff gets a reference to the given Link and assigns it to the Diff field.
func (o *PullRequestLinks) SetDiff(v Link) {
	o.Diff = &v
}

// GetDiffstat returns the Diffstat field value if set, zero value otherwise.
func (o *PullRequestLinks) GetDiffstat() Link {
	if o == nil || o.Diffstat == nil {
		var ret Link
		return ret
	}
	return *o.Diffstat
}

// GetDiffstatOk returns a tuple with the Diffstat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetDiffstatOk() (*Link, bool) {
	if o == nil || o.Diffstat == nil {
		return nil, false
	}
	return o.Diffstat, true
}

// HasDiffstat returns a boolean if a field has been set.
func (o *PullRequestLinks) HasDiffstat() bool {
	if o != nil && o.Diffstat != nil {
		return true
	}

	return false
}

// SetDiffstat gets a reference to the given Link and assigns it to the Diffstat field.
func (o *PullRequestLinks) SetDiffstat(v Link) {
	o.Diffstat = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *PullRequestLinks) GetComments() Link {
	if o == nil || o.Comments == nil {
		var ret Link
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetCommentsOk() (*Link, bool) {
	if o == nil || o.Comments == nil {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *PullRequestLinks) HasComments() bool {
	if o != nil && o.Comments != nil {
		return true
	}

	return false
}

// SetComments gets a reference to the given Link and assigns it to the Comments field.
func (o *PullRequestLinks) SetComments(v Link) {
	o.Comments = &v
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *PullRequestLinks) GetActivity() Link {
	if o == nil || o.Activity == nil {
		var ret Link
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetActivityOk() (*Link, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *PullRequestLinks) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given Link and assigns it to the Activity field.
func (o *PullRequestLinks) SetActivity(v Link) {
	o.Activity = &v
}

// GetMerge returns the Merge field value if set, zero value otherwise.
func (o *PullRequestLinks) GetMerge() Link {
	if o == nil || o.Merge == nil {
		var ret Link
		return ret
	}
	return *o.Merge
}

// GetMergeOk returns a tuple with the Merge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetMergeOk() (*Link, bool) {
	if o == nil || o.Merge == nil {
		return nil, false
	}
	return o.Merge, true
}

// HasMerge returns a boolean if a field has been set.
func (o *PullRequestLinks) HasMerge() bool {
	if o != nil && o.Merge != nil {
		return true
	}

	return false
}

// SetMerge gets a reference to the given Link and assigns it to the Merge field.
func (o *PullRequestLinks) SetMerge(v Link) {
	o.Merge = &v
}

// GetDecline returns the Decline field value if set, zero value otherwise.
func (o *PullRequestLinks) GetDecline() Link {
	if o == nil || o.Decline == nil {
		var ret Link
		return ret
	}
	return *o.Decline
}

// GetDeclineOk returns a tuple with the Decline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestLinks) GetDeclineOk() (*Link, bool) {
	if o == nil || o.Decline == nil {
		return nil, false
	}
	return o.Decline, true
}

// HasDecline returns a boolean if a field has been set.
func (o *PullRequestLinks) HasDecline() bool {
	if o != nil && o.Decline != nil {
		return true
	}

	return false
}

// SetDecline gets a reference to the given Link and assigns it to the Decline field.
func (o *PullRequestLinks) SetDecline(v Link) {
	o.Decline = &v
}

func (o PullRequestLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if o.Html != nil {
		toSerialize["html"] = o.Html
	}
	if o.Commits != nil {
		toSerialize["commits"] = o.Commits
	}
	if o.Approve != nil {
		toSerialize["approve"] = o.Approve
	}
	if o.Diff != nil {
		toSerialize["diff"] = o.Diff
	}
	if o.Diffstat != nil {
		toSerialize["diffstat"] = o.Diffstat
	}
	if o.Comments != nil {
		toSerialize["comments"] = o.Comments
	}
	if o.Activity != nil {
		toSerialize["activity"] = o.Activity
	}
	if o.Merge != nil {
		toSerialize["merge"] = o.Merge
	}
	if o.Decline != nil {
		toSerialize["decline"] = o.Decline
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestLinks struct {
	value *PullRequestLinks
	isSet bool
}

func (v NullablePullRequestLinks) Get() *PullRequestLinks {
	return v.value
}

func (v *NullablePullRequestLinks) Set(val *PullRequestLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestLinks(val *PullRequestLinks) *NullablePullRequestLinks {
	return &NullablePullRequestLinks{value: val, isSet: true}
}

func (v NullablePullRequestLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


