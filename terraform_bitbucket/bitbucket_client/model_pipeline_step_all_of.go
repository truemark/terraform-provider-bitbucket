/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
	"time"
)

// PipelineStepAllOf A step of a Bitbucket pipeline. This represents the actual result of the step execution.
type PipelineStepAllOf struct {
	// The UUID identifying the step.
	Uuid *string `json:"uuid,omitempty"`
	// The timestamp when the step execution was started. This is not set when the step hasn't executed yet.
	StartedOn *time.Time `json:"started_on,omitempty"`
	// The timestamp when the step execution was completed. This is not set if the step is still in progress.
	CompletedOn *time.Time `json:"completed_on,omitempty"`
	State *PipelineStepState `json:"state,omitempty"`
	Image *PipelineImage `json:"image,omitempty"`
	// The list of commands that are executed as part of the setup phase of the build. These commands are executed outside the build container.
	SetupCommands *[]PipelineCommand `json:"setup_commands,omitempty"`
	// The list of build commands. These commands are executed in the build container.
	ScriptCommands *[]PipelineCommand `json:"script_commands,omitempty"`
}

// NewPipelineStepAllOf instantiates a new PipelineStepAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineStepAllOf() *PipelineStepAllOf {
	this := PipelineStepAllOf{}
	return &this
}

// NewPipelineStepAllOfWithDefaults instantiates a new PipelineStepAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineStepAllOfWithDefaults() *PipelineStepAllOf {
	this := PipelineStepAllOf{}
	return &this
}

// GetUuid returns the Uuid field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetUuid() string {
	if o == nil || o.Uuid == nil {
		var ret string
		return ret
	}
	return *o.Uuid
}

// GetUuidOk returns a tuple with the Uuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetUuidOk() (*string, bool) {
	if o == nil || o.Uuid == nil {
		return nil, false
	}
	return o.Uuid, true
}

// HasUuid returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasUuid() bool {
	if o != nil && o.Uuid != nil {
		return true
	}

	return false
}

// SetUuid gets a reference to the given string and assigns it to the Uuid field.
func (o *PipelineStepAllOf) SetUuid(v string) {
	o.Uuid = &v
}

// GetStartedOn returns the StartedOn field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetStartedOn() time.Time {
	if o == nil || o.StartedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.StartedOn
}

// GetStartedOnOk returns a tuple with the StartedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetStartedOnOk() (*time.Time, bool) {
	if o == nil || o.StartedOn == nil {
		return nil, false
	}
	return o.StartedOn, true
}

// HasStartedOn returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasStartedOn() bool {
	if o != nil && o.StartedOn != nil {
		return true
	}

	return false
}

// SetStartedOn gets a reference to the given time.Time and assigns it to the StartedOn field.
func (o *PipelineStepAllOf) SetStartedOn(v time.Time) {
	o.StartedOn = &v
}

// GetCompletedOn returns the CompletedOn field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetCompletedOn() time.Time {
	if o == nil || o.CompletedOn == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletedOn
}

// GetCompletedOnOk returns a tuple with the CompletedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetCompletedOnOk() (*time.Time, bool) {
	if o == nil || o.CompletedOn == nil {
		return nil, false
	}
	return o.CompletedOn, true
}

// HasCompletedOn returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasCompletedOn() bool {
	if o != nil && o.CompletedOn != nil {
		return true
	}

	return false
}

// SetCompletedOn gets a reference to the given time.Time and assigns it to the CompletedOn field.
func (o *PipelineStepAllOf) SetCompletedOn(v time.Time) {
	o.CompletedOn = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetState() PipelineStepState {
	if o == nil || o.State == nil {
		var ret PipelineStepState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetStateOk() (*PipelineStepState, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given PipelineStepState and assigns it to the State field.
func (o *PipelineStepAllOf) SetState(v PipelineStepState) {
	o.State = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetImage() PipelineImage {
	if o == nil || o.Image == nil {
		var ret PipelineImage
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetImageOk() (*PipelineImage, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given PipelineImage and assigns it to the Image field.
func (o *PipelineStepAllOf) SetImage(v PipelineImage) {
	o.Image = &v
}

// GetSetupCommands returns the SetupCommands field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetSetupCommands() []PipelineCommand {
	if o == nil || o.SetupCommands == nil {
		var ret []PipelineCommand
		return ret
	}
	return *o.SetupCommands
}

// GetSetupCommandsOk returns a tuple with the SetupCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetSetupCommandsOk() (*[]PipelineCommand, bool) {
	if o == nil || o.SetupCommands == nil {
		return nil, false
	}
	return o.SetupCommands, true
}

// HasSetupCommands returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasSetupCommands() bool {
	if o != nil && o.SetupCommands != nil {
		return true
	}

	return false
}

// SetSetupCommands gets a reference to the given []PipelineCommand and assigns it to the SetupCommands field.
func (o *PipelineStepAllOf) SetSetupCommands(v []PipelineCommand) {
	o.SetupCommands = &v
}

// GetScriptCommands returns the ScriptCommands field value if set, zero value otherwise.
func (o *PipelineStepAllOf) GetScriptCommands() []PipelineCommand {
	if o == nil || o.ScriptCommands == nil {
		var ret []PipelineCommand
		return ret
	}
	return *o.ScriptCommands
}

// GetScriptCommandsOk returns a tuple with the ScriptCommands field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineStepAllOf) GetScriptCommandsOk() (*[]PipelineCommand, bool) {
	if o == nil || o.ScriptCommands == nil {
		return nil, false
	}
	return o.ScriptCommands, true
}

// HasScriptCommands returns a boolean if a field has been set.
func (o *PipelineStepAllOf) HasScriptCommands() bool {
	if o != nil && o.ScriptCommands != nil {
		return true
	}

	return false
}

// SetScriptCommands gets a reference to the given []PipelineCommand and assigns it to the ScriptCommands field.
func (o *PipelineStepAllOf) SetScriptCommands(v []PipelineCommand) {
	o.ScriptCommands = &v
}

func (o PipelineStepAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Uuid != nil {
		toSerialize["uuid"] = o.Uuid
	}
	if o.StartedOn != nil {
		toSerialize["started_on"] = o.StartedOn
	}
	if o.CompletedOn != nil {
		toSerialize["completed_on"] = o.CompletedOn
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.SetupCommands != nil {
		toSerialize["setup_commands"] = o.SetupCommands
	}
	if o.ScriptCommands != nil {
		toSerialize["script_commands"] = o.ScriptCommands
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineStepAllOf struct {
	value *PipelineStepAllOf
	isSet bool
}

func (v NullablePipelineStepAllOf) Get() *PipelineStepAllOf {
	return v.value
}

func (v *NullablePipelineStepAllOf) Set(val *PipelineStepAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineStepAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineStepAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineStepAllOf(val *PipelineStepAllOf) *NullablePipelineStepAllOf {
	return &NullablePipelineStepAllOf{value: val, isSet: true}
}

func (v NullablePipelineStepAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineStepAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


