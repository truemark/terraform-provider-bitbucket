/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PipelineSshKeyPairAllOf A Pipelines SSH key pair.
type PipelineSshKeyPairAllOf struct {
	// The SSH private key. This value will be empty when retrieving the SSH key pair.
	PrivateKey *string `json:"private_key,omitempty"`
	// The SSH public key.
	PublicKey *string `json:"public_key,omitempty"`
}

// NewPipelineSshKeyPairAllOf instantiates a new PipelineSshKeyPairAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelineSshKeyPairAllOf() *PipelineSshKeyPairAllOf {
	this := PipelineSshKeyPairAllOf{}
	return &this
}

// NewPipelineSshKeyPairAllOfWithDefaults instantiates a new PipelineSshKeyPairAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelineSshKeyPairAllOfWithDefaults() *PipelineSshKeyPairAllOf {
	this := PipelineSshKeyPairAllOf{}
	return &this
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *PipelineSshKeyPairAllOf) GetPrivateKey() string {
	if o == nil || o.PrivateKey == nil {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshKeyPairAllOf) GetPrivateKeyOk() (*string, bool) {
	if o == nil || o.PrivateKey == nil {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *PipelineSshKeyPairAllOf) HasPrivateKey() bool {
	if o != nil && o.PrivateKey != nil {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *PipelineSshKeyPairAllOf) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *PipelineSshKeyPairAllOf) GetPublicKey() string {
	if o == nil || o.PublicKey == nil {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelineSshKeyPairAllOf) GetPublicKeyOk() (*string, bool) {
	if o == nil || o.PublicKey == nil {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *PipelineSshKeyPairAllOf) HasPublicKey() bool {
	if o != nil && o.PublicKey != nil {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *PipelineSshKeyPairAllOf) SetPublicKey(v string) {
	o.PublicKey = &v
}

func (o PipelineSshKeyPairAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PrivateKey != nil {
		toSerialize["private_key"] = o.PrivateKey
	}
	if o.PublicKey != nil {
		toSerialize["public_key"] = o.PublicKey
	}
	return json.Marshal(toSerialize)
}

type NullablePipelineSshKeyPairAllOf struct {
	value *PipelineSshKeyPairAllOf
	isSet bool
}

func (v NullablePipelineSshKeyPairAllOf) Get() *PipelineSshKeyPairAllOf {
	return v.value
}

func (v *NullablePipelineSshKeyPairAllOf) Set(val *PipelineSshKeyPairAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelineSshKeyPairAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelineSshKeyPairAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelineSshKeyPairAllOf(val *PipelineSshKeyPairAllOf) *NullablePipelineSshKeyPairAllOf {
	return &NullablePipelineSshKeyPairAllOf{value: val, isSet: true}
}

func (v NullablePipelineSshKeyPairAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelineSshKeyPairAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


