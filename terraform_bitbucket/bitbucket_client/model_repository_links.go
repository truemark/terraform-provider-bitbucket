/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// RepositoryLinks struct for RepositoryLinks
type RepositoryLinks struct {
	Self *Link `json:"self,omitempty"`
	Html *Link `json:"html,omitempty"`
	Avatar *Link `json:"avatar,omitempty"`
	Pullrequests *Link `json:"pullrequests,omitempty"`
	Commits *Link `json:"commits,omitempty"`
	Forks *Link `json:"forks,omitempty"`
	Watchers *Link `json:"watchers,omitempty"`
	Downloads *Link `json:"downloads,omitempty"`
	Clone *[]Link `json:"clone,omitempty"`
	Hooks *Link `json:"hooks,omitempty"`
}

// NewRepositoryLinks instantiates a new RepositoryLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryLinks() *RepositoryLinks {
	this := RepositoryLinks{}
	return &this
}

// NewRepositoryLinksWithDefaults instantiates a new RepositoryLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryLinksWithDefaults() *RepositoryLinks {
	this := RepositoryLinks{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *RepositoryLinks) GetSelf() Link {
	if o == nil || o.Self == nil {
		var ret Link
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetSelfOk() (*Link, bool) {
	if o == nil || o.Self == nil {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *RepositoryLinks) HasSelf() bool {
	if o != nil && o.Self != nil {
		return true
	}

	return false
}

// SetSelf gets a reference to the given Link and assigns it to the Self field.
func (o *RepositoryLinks) SetSelf(v Link) {
	o.Self = &v
}

// GetHtml returns the Html field value if set, zero value otherwise.
func (o *RepositoryLinks) GetHtml() Link {
	if o == nil || o.Html == nil {
		var ret Link
		return ret
	}
	return *o.Html
}

// GetHtmlOk returns a tuple with the Html field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetHtmlOk() (*Link, bool) {
	if o == nil || o.Html == nil {
		return nil, false
	}
	return o.Html, true
}

// HasHtml returns a boolean if a field has been set.
func (o *RepositoryLinks) HasHtml() bool {
	if o != nil && o.Html != nil {
		return true
	}

	return false
}

// SetHtml gets a reference to the given Link and assigns it to the Html field.
func (o *RepositoryLinks) SetHtml(v Link) {
	o.Html = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise.
func (o *RepositoryLinks) GetAvatar() Link {
	if o == nil || o.Avatar == nil {
		var ret Link
		return ret
	}
	return *o.Avatar
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetAvatarOk() (*Link, bool) {
	if o == nil || o.Avatar == nil {
		return nil, false
	}
	return o.Avatar, true
}

// HasAvatar returns a boolean if a field has been set.
func (o *RepositoryLinks) HasAvatar() bool {
	if o != nil && o.Avatar != nil {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given Link and assigns it to the Avatar field.
func (o *RepositoryLinks) SetAvatar(v Link) {
	o.Avatar = &v
}

// GetPullrequests returns the Pullrequests field value if set, zero value otherwise.
func (o *RepositoryLinks) GetPullrequests() Link {
	if o == nil || o.Pullrequests == nil {
		var ret Link
		return ret
	}
	return *o.Pullrequests
}

// GetPullrequestsOk returns a tuple with the Pullrequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetPullrequestsOk() (*Link, bool) {
	if o == nil || o.Pullrequests == nil {
		return nil, false
	}
	return o.Pullrequests, true
}

// HasPullrequests returns a boolean if a field has been set.
func (o *RepositoryLinks) HasPullrequests() bool {
	if o != nil && o.Pullrequests != nil {
		return true
	}

	return false
}

// SetPullrequests gets a reference to the given Link and assigns it to the Pullrequests field.
func (o *RepositoryLinks) SetPullrequests(v Link) {
	o.Pullrequests = &v
}

// GetCommits returns the Commits field value if set, zero value otherwise.
func (o *RepositoryLinks) GetCommits() Link {
	if o == nil || o.Commits == nil {
		var ret Link
		return ret
	}
	return *o.Commits
}

// GetCommitsOk returns a tuple with the Commits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetCommitsOk() (*Link, bool) {
	if o == nil || o.Commits == nil {
		return nil, false
	}
	return o.Commits, true
}

// HasCommits returns a boolean if a field has been set.
func (o *RepositoryLinks) HasCommits() bool {
	if o != nil && o.Commits != nil {
		return true
	}

	return false
}

// SetCommits gets a reference to the given Link and assigns it to the Commits field.
func (o *RepositoryLinks) SetCommits(v Link) {
	o.Commits = &v
}

// GetForks returns the Forks field value if set, zero value otherwise.
func (o *RepositoryLinks) GetForks() Link {
	if o == nil || o.Forks == nil {
		var ret Link
		return ret
	}
	return *o.Forks
}

// GetForksOk returns a tuple with the Forks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetForksOk() (*Link, bool) {
	if o == nil || o.Forks == nil {
		return nil, false
	}
	return o.Forks, true
}

// HasForks returns a boolean if a field has been set.
func (o *RepositoryLinks) HasForks() bool {
	if o != nil && o.Forks != nil {
		return true
	}

	return false
}

// SetForks gets a reference to the given Link and assigns it to the Forks field.
func (o *RepositoryLinks) SetForks(v Link) {
	o.Forks = &v
}

// GetWatchers returns the Watchers field value if set, zero value otherwise.
func (o *RepositoryLinks) GetWatchers() Link {
	if o == nil || o.Watchers == nil {
		var ret Link
		return ret
	}
	return *o.Watchers
}

// GetWatchersOk returns a tuple with the Watchers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetWatchersOk() (*Link, bool) {
	if o == nil || o.Watchers == nil {
		return nil, false
	}
	return o.Watchers, true
}

// HasWatchers returns a boolean if a field has been set.
func (o *RepositoryLinks) HasWatchers() bool {
	if o != nil && o.Watchers != nil {
		return true
	}

	return false
}

// SetWatchers gets a reference to the given Link and assigns it to the Watchers field.
func (o *RepositoryLinks) SetWatchers(v Link) {
	o.Watchers = &v
}

// GetDownloads returns the Downloads field value if set, zero value otherwise.
func (o *RepositoryLinks) GetDownloads() Link {
	if o == nil || o.Downloads == nil {
		var ret Link
		return ret
	}
	return *o.Downloads
}

// GetDownloadsOk returns a tuple with the Downloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetDownloadsOk() (*Link, bool) {
	if o == nil || o.Downloads == nil {
		return nil, false
	}
	return o.Downloads, true
}

// HasDownloads returns a boolean if a field has been set.
func (o *RepositoryLinks) HasDownloads() bool {
	if o != nil && o.Downloads != nil {
		return true
	}

	return false
}

// SetDownloads gets a reference to the given Link and assigns it to the Downloads field.
func (o *RepositoryLinks) SetDownloads(v Link) {
	o.Downloads = &v
}

// GetClone returns the Clone field value if set, zero value otherwise.
func (o *RepositoryLinks) GetClone() []Link {
	if o == nil || o.Clone == nil {
		var ret []Link
		return ret
	}
	return *o.Clone
}

// GetCloneOk returns a tuple with the Clone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetCloneOk() (*[]Link, bool) {
	if o == nil || o.Clone == nil {
		return nil, false
	}
	return o.Clone, true
}

// HasClone returns a boolean if a field has been set.
func (o *RepositoryLinks) HasClone() bool {
	if o != nil && o.Clone != nil {
		return true
	}

	return false
}

// SetClone gets a reference to the given []Link and assigns it to the Clone field.
func (o *RepositoryLinks) SetClone(v []Link) {
	o.Clone = &v
}

// GetHooks returns the Hooks field value if set, zero value otherwise.
func (o *RepositoryLinks) GetHooks() Link {
	if o == nil || o.Hooks == nil {
		var ret Link
		return ret
	}
	return *o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryLinks) GetHooksOk() (*Link, bool) {
	if o == nil || o.Hooks == nil {
		return nil, false
	}
	return o.Hooks, true
}

// HasHooks returns a boolean if a field has been set.
func (o *RepositoryLinks) HasHooks() bool {
	if o != nil && o.Hooks != nil {
		return true
	}

	return false
}

// SetHooks gets a reference to the given Link and assigns it to the Hooks field.
func (o *RepositoryLinks) SetHooks(v Link) {
	o.Hooks = &v
}

func (o RepositoryLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Self != nil {
		toSerialize["self"] = o.Self
	}
	if o.Html != nil {
		toSerialize["html"] = o.Html
	}
	if o.Avatar != nil {
		toSerialize["avatar"] = o.Avatar
	}
	if o.Pullrequests != nil {
		toSerialize["pullrequests"] = o.Pullrequests
	}
	if o.Commits != nil {
		toSerialize["commits"] = o.Commits
	}
	if o.Forks != nil {
		toSerialize["forks"] = o.Forks
	}
	if o.Watchers != nil {
		toSerialize["watchers"] = o.Watchers
	}
	if o.Downloads != nil {
		toSerialize["downloads"] = o.Downloads
	}
	if o.Clone != nil {
		toSerialize["clone"] = o.Clone
	}
	if o.Hooks != nil {
		toSerialize["hooks"] = o.Hooks
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryLinks struct {
	value *RepositoryLinks
	isSet bool
}

func (v NullableRepositoryLinks) Get() *RepositoryLinks {
	return v.value
}

func (v *NullableRepositoryLinks) Set(val *RepositoryLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryLinks(val *RepositoryLinks) *NullableRepositoryLinks {
	return &NullableRepositoryLinks{value: val, isSet: true}
}

func (v NullableRepositoryLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


