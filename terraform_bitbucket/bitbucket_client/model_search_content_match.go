/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// SearchContentMatch struct for SearchContentMatch
type SearchContentMatch struct {
	Lines *[]SearchLine `json:"lines,omitempty"`
}

// NewSearchContentMatch instantiates a new SearchContentMatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchContentMatch() *SearchContentMatch {
	this := SearchContentMatch{}
	return &this
}

// NewSearchContentMatchWithDefaults instantiates a new SearchContentMatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchContentMatchWithDefaults() *SearchContentMatch {
	this := SearchContentMatch{}
	return &this
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *SearchContentMatch) GetLines() []SearchLine {
	if o == nil || o.Lines == nil {
		var ret []SearchLine
		return ret
	}
	return *o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchContentMatch) GetLinesOk() (*[]SearchLine, bool) {
	if o == nil || o.Lines == nil {
		return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *SearchContentMatch) HasLines() bool {
	if o != nil && o.Lines != nil {
		return true
	}

	return false
}

// SetLines gets a reference to the given []SearchLine and assigns it to the Lines field.
func (o *SearchContentMatch) SetLines(v []SearchLine) {
	o.Lines = &v
}

func (o SearchContentMatch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Lines != nil {
		toSerialize["lines"] = o.Lines
	}
	return json.Marshal(toSerialize)
}

type NullableSearchContentMatch struct {
	value *SearchContentMatch
	isSet bool
}

func (v NullableSearchContentMatch) Get() *SearchContentMatch {
	return v.value
}

func (v *NullableSearchContentMatch) Set(val *SearchContentMatch) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchContentMatch) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchContentMatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchContentMatch(val *SearchContentMatch) *NullableSearchContentMatch {
	return &NullableSearchContentMatch{value: val, isSet: true}
}

func (v NullableSearchContentMatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchContentMatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


