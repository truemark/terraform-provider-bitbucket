/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PipelinesConfigAllOf The Pipelines configuration for a repository.
type PipelinesConfigAllOf struct {
	// Whether Pipelines is enabled for the repository.
	Enabled *bool `json:"enabled,omitempty"`
	Repository *Repository `json:"repository,omitempty"`
}

// NewPipelinesConfigAllOf instantiates a new PipelinesConfigAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPipelinesConfigAllOf() *PipelinesConfigAllOf {
	this := PipelinesConfigAllOf{}
	return &this
}

// NewPipelinesConfigAllOfWithDefaults instantiates a new PipelinesConfigAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPipelinesConfigAllOfWithDefaults() *PipelinesConfigAllOf {
	this := PipelinesConfigAllOf{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *PipelinesConfigAllOf) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelinesConfigAllOf) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PipelinesConfigAllOf) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *PipelinesConfigAllOf) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *PipelinesConfigAllOf) GetRepository() Repository {
	if o == nil || o.Repository == nil {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PipelinesConfigAllOf) GetRepositoryOk() (*Repository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *PipelinesConfigAllOf) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *PipelinesConfigAllOf) SetRepository(v Repository) {
	o.Repository = &v
}

func (o PipelinesConfigAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	return json.Marshal(toSerialize)
}

type NullablePipelinesConfigAllOf struct {
	value *PipelinesConfigAllOf
	isSet bool
}

func (v NullablePipelinesConfigAllOf) Get() *PipelinesConfigAllOf {
	return v.value
}

func (v *NullablePipelinesConfigAllOf) Set(val *PipelinesConfigAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePipelinesConfigAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePipelinesConfigAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePipelinesConfigAllOf(val *PipelinesConfigAllOf) *NullablePipelinesConfigAllOf {
	return &NullablePipelinesConfigAllOf{value: val, isSet: true}
}

func (v NullablePipelinesConfigAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePipelinesConfigAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


