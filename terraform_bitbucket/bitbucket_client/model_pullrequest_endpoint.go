/*
 * Bitbucket API
 *
 * Code against the Bitbucket API to automate simple tasks, embed Bitbucket data into your own site, build mobile or desktop apps, or even add custom UI add-ons into Bitbucket itself using the Connect framework.
 *
 * API version: 2.0
 * Contact: support@bitbucket.org
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bitbucket_client

import (
	"encoding/json"
)

// PullrequestEndpoint struct for PullrequestEndpoint
type PullrequestEndpoint struct {
	Repository *Repository `json:"repository,omitempty"`
	Branch *PullRequestBranch `json:"branch,omitempty"`
	Commit *PullRequestCommit `json:"commit,omitempty"`
}

// NewPullrequestEndpoint instantiates a new PullrequestEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullrequestEndpoint() *PullrequestEndpoint {
	this := PullrequestEndpoint{}
	return &this
}

// NewPullrequestEndpointWithDefaults instantiates a new PullrequestEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullrequestEndpointWithDefaults() *PullrequestEndpoint {
	this := PullrequestEndpoint{}
	return &this
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *PullrequestEndpoint) GetRepository() Repository {
	if o == nil || o.Repository == nil {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullrequestEndpoint) GetRepositoryOk() (*Repository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *PullrequestEndpoint) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *PullrequestEndpoint) SetRepository(v Repository) {
	o.Repository = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *PullrequestEndpoint) GetBranch() PullRequestBranch {
	if o == nil || o.Branch == nil {
		var ret PullRequestBranch
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullrequestEndpoint) GetBranchOk() (*PullRequestBranch, bool) {
	if o == nil || o.Branch == nil {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *PullrequestEndpoint) HasBranch() bool {
	if o != nil && o.Branch != nil {
		return true
	}

	return false
}

// SetBranch gets a reference to the given PullRequestBranch and assigns it to the Branch field.
func (o *PullrequestEndpoint) SetBranch(v PullRequestBranch) {
	o.Branch = &v
}

// GetCommit returns the Commit field value if set, zero value otherwise.
func (o *PullrequestEndpoint) GetCommit() PullRequestCommit {
	if o == nil || o.Commit == nil {
		var ret PullRequestCommit
		return ret
	}
	return *o.Commit
}

// GetCommitOk returns a tuple with the Commit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullrequestEndpoint) GetCommitOk() (*PullRequestCommit, bool) {
	if o == nil || o.Commit == nil {
		return nil, false
	}
	return o.Commit, true
}

// HasCommit returns a boolean if a field has been set.
func (o *PullrequestEndpoint) HasCommit() bool {
	if o != nil && o.Commit != nil {
		return true
	}

	return false
}

// SetCommit gets a reference to the given PullRequestCommit and assigns it to the Commit field.
func (o *PullrequestEndpoint) SetCommit(v PullRequestCommit) {
	o.Commit = &v
}

func (o PullrequestEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Branch != nil {
		toSerialize["branch"] = o.Branch
	}
	if o.Commit != nil {
		toSerialize["commit"] = o.Commit
	}
	return json.Marshal(toSerialize)
}

type NullablePullrequestEndpoint struct {
	value *PullrequestEndpoint
	isSet bool
}

func (v NullablePullrequestEndpoint) Get() *PullrequestEndpoint {
	return v.value
}

func (v *NullablePullrequestEndpoint) Set(val *PullrequestEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullablePullrequestEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullablePullrequestEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullrequestEndpoint(val *PullrequestEndpoint) *NullablePullrequestEndpoint {
	return &NullablePullrequestEndpoint{value: val, isSet: true}
}

func (v NullablePullrequestEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullrequestEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


